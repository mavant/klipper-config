[gcode_macro REQUIRE_PARAM]
gcode:
    {% set caller = params.CALLER %}
    {% set p      = params.PARAM %}
    {% set actual = params.ACTUAL %}
    {% if p not in PARAMS %}
        RESPOND TYPE=error MSG="{ caller } requires parameter { p }"
        CANCEL_PRINT
    {% endif %}
    {% set wanted = params[p] %}
    {% if wanted != actual %}
        RESPOND TYPE=error MSG="{ caller } given { p }={ wanted } but the printer's current value is { actual } "
        CANCEL_PRINT
    {% endif %}

[gcode_macro REQUIRE_NOZZLE_WIDTH]
gcode:
    REQUIRE_PARAM PARAM="NOZZLE_WIDTH" ACTUAL={ printer.settings.extruder.nozzle_diameter } { rawparams }

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|int %}

    {% set FLOW_RATE = params.FLOW_RATE|default(100.0)|float %}
    {% set Z_OFFSET = params.Z_OFFSET|default(0.0)|float %}
    {% set PRESSURE_ADVANCE = params.PRESSURE_ADVANCE|default(printer.extruder.pressure_advance)|float %}
    {% set BUILD_SURFACE = params.BUILD_SURFACE|default("PEI-spring-steel")|string %}
    {% set BED_MESH_PROFILE = params.BED_MESH_PROFILE|default("%s-%sC" % (BUILD_SURFACE, BED_TEMP))|string %}

    REQUIRE_NOZZLE_WIDTH CALLER="START_PRINT" { rawparams }

    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ BED_TEMP }          # Heat up Bed

    G21 # millimeter units
    G90 # Absolute coordinates
    M82 # Absolute extrusion distances.
    G92 E0 # Reset extrusion distance.
    CLEAR_PAUSE

    SET_GCODE_OFFSET Z={ Z_OFFSET }   # Reset the G-Code Z offset
    #BED_MESH_PROFILE LOAD={ BED_MESH_PROFILE }
    SET_PRESSURE_ADVANCE ADVANCE={ PRESSURE_ADVANCE }
    M221 S{ FLOW_RATE }
    M107 # Disable fan

    # While we wait for the bed, do some slower pieces
    
    G28   # Home the printer
    M400  # Ensure that move has actually happened so that if the probe is connected it's definitely NOT touching the plate
    QUERY_PROBE
    # Then we must use a separate macro to actually check the probe result
    HALT_IF_PROBE_IS_CONNECTED

    # Okay now that we know we're not gonna melt the probe, go we can heat up the nozzle,
    # it's generally much faster than heating up the bed anyway
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={ EXTRUDER_TEMP }

    G0 X0 Y0 Z50 F3000 # Lower the nozzle and set feedrate
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP} # Wait for nozzle to reach temperature
    G1 E0        # Zero the extruder (must come after we've heated up the nozzle)
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP}    # Wait for bed to reach temperature
    
    G0 X-130 Y0 Z0.4 F3000 # Move to start position for wipe move
    G3 X0 Y-130 I130 Z0.3 E40 F2700 # Extrude about 40 mm by printing a 90 degree arc

    G10 # Retract
    G0 Z5 # move off the plate
    G11  # Unretract

    G92 E0 # Zero out extruder

    M400 # wait for all moves to complete before handing back control

[gcode_macro HALT_IF_PROBE_IS_CONNECTED]
gcode:
    # We just homed and then queried the probe, so we're definitely not touching the bed,
    # Therefore if the probe reports "triggered" it must be detached, and if it is still attached it must report "open".
    {% if printer.probe.last_query is undefined %}
      M118 What does it mean for probe.last_query to be undefined?
      PAUSE
    {% elif not printer.probe.last_query %}
      M118 You must detach the probe before beginning to print!
      PAUSE
    {% endif %}
